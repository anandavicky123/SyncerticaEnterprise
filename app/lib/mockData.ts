import {
  SecurityAlert,
  SecurityMetric,
  ComplianceStatus,
  AuditLog,
} from "../lib/types";

export const mockSecurityAlerts: SecurityAlert[] = [
  {
    id: "1",
    title: "Failed Authentication Attempts",
    description: "Multiple failed login attempts detected",
    severity: "high",
    timestamp: new Date().toISOString(),
    status: "active",
    category: "authentication",
    affectedUsers: 1,
    source: "auth.service",
  },
  {
    id: "2",
    title: "Unusual API Access Pattern",
    description: "Detected unusual API access patterns",
    severity: "medium",
    timestamp: new Date().toISOString(),
    status: "investigating",
    category: "suspicious_activity",
    affectedUsers: 0,
    source: "api.gateway",
  },
  {
    id: "3",
    title: "Data Access Violation",
    description: "Unauthorized attempt to access sensitive data",
    severity: "critical",
    timestamp: new Date().toISOString(),
    status: "active",
    category: "data_breach",
    affectedUsers: 5,
    source: "data.service",
  },
];

export const mockSecurityMetrics: SecurityMetric[] = [
  {
    id: "1",
    name: "Authentication Success Rate",
    value: 98.5,
    maxValue: 100,
    unit: "%",
    status: "good",
    description: "Percentage of successful authentication attempts",
  },
  {
    id: "2",
    name: "API Security Score",
    value: 85,
    maxValue: 100,
    unit: "points",
    status: "good",
    description: "Overall API security rating",
  },
  {
    id: "3",
    name: "Vulnerability Count",
    value: 3,
    maxValue: 10,
    unit: "issues",
    status: "warning",
    description: "Number of active security vulnerabilities",
  },
  {
    id: "4",
    name: "Encryption Coverage",
    value: 100,
    maxValue: 100,
    unit: "%",
    status: "good",
    description: "Percentage of data under encryption",
  },
];

export const mockComplianceStatus: ComplianceStatus[] = [
  {
    framework: "GDPR",
    percentage: 95,
    status: "compliant",
    lastAudit: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),
    nextAudit: new Date(Date.now() + 335 * 24 * 60 * 60 * 1000).toISOString(),
  },
  {
    framework: "HIPAA",
    percentage: 85,
    status: "partial",
    lastAudit: new Date(Date.now() - 45 * 24 * 60 * 60 * 1000).toISOString(),
    nextAudit: new Date(Date.now() + 320 * 24 * 60 * 60 * 1000).toISOString(),
  },
  {
    framework: "SOC 2",
    percentage: 92,
    status: "compliant",
    lastAudit: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString(),
    nextAudit: new Date(Date.now() + 350 * 24 * 60 * 60 * 1000).toISOString(),
  },
  {
    framework: "ISO 27001",
    percentage: 90,
    status: "compliant",
    lastAudit: new Date(Date.now() - 60 * 24 * 60 * 60 * 1000).toISOString(),
    nextAudit: new Date(Date.now() + 305 * 24 * 60 * 60 * 1000).toISOString(),
  },
];

export const mockAuditLogs: AuditLog[] = [
  {
    id: "1",
    timestamp: new Date().toISOString(),
    userId: "u123",
    userName: "John Doe",
    action: "LOGIN",
    resource: "auth.system",
    ipAddress: "192.168.1.100",
    userAgent: "Mozilla/5.0",
    result: "success",
    details: "Successful login from approved IP",
  },
  {
    id: "2",
    timestamp: new Date().toISOString(),
    userId: "system",
    userName: "System Audit",
    action: "DATA_EXPORT",
    resource: "customer.db",
    ipAddress: "10.0.0.5",
    userAgent: "system/1.0",
    result: "success",
    details: "Bulk data export initiated",
  },
  {
    id: "3",
    timestamp: new Date().toISOString(),
    userId: "u456",
    userName: "Admin User",
    action: "PERMISSION_UPDATE",
    resource: "role.engineer",
    ipAddress: "192.168.1.200",
    userAgent: "Mozilla/5.0",
    result: "success",
    details: "Added API access permissions",
  },
];
